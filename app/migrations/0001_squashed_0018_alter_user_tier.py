# Generated by Django 4.0.4 on 2022-05-31 13:34

import app.validators
import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    replaces = [('app', '0001_initial'), ('app', '0002_alter_user_tier'), ('app', '0003_alter_user_tier'), ('app', '0004_photo'), ('app', '0005_image_upload_delete_photo_image_upload'), ('app', '0006_thumbnail_alter_image_upload_alter_upload_user_and_more'), ('app', '0007_remove_tier_thumbnail_thumbnail_tier'), ('app', '0008_alter_thumbnail_tier'), ('app', '0009_rename_max_heigh_thumbnail_max_height'), ('app', '0010_image_label'), ('app', '0011_tier_is_original_allowed'), ('app', '0012_alter_thumbnail_options'), ('app', '0013_upload_created_upload_duration_upload_expire_date'), ('app', '0014_alter_upload_duration_alter_upload_expire_date'), ('app', '0015_tier_is_expiring_allowed'), ('app', '0016_alter_tier_is_expiring_allowed_and_more'), ('app', '0017_alter_user_tier'), ('app', '0018_alter_user_tier')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Tier name')),
                ('is_original_allowed', models.BooleanField(verbose_name='Is uploading of original picture allowed?')),
                ('is_expiring_allowed', models.BooleanField(verbose_name='Is setting expire time allowed?')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('tier', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='app.tier')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upload', to=settings.AUTH_USER_MODEL)),
                ('created', models.DateTimeField(auto_now_add=True, default=datetime.datetime(2022, 5, 30, 17, 27, 15, 226460, tzinfo=utc))),
                ('duration', models.PositiveIntegerField(blank=True, null=True)),
                ('expire_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app.upload')),
                ('label', models.CharField(default='orig', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Thumbnail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_height', models.PositiveIntegerField(validators=[app.validators.validate_max_height])),
                ('tier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thumbnails', to='app.tier')),
            ],
            options={
                'ordering': ['-max_height'],
            },
        ),
    ]
